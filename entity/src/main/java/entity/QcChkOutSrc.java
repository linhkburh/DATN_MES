package entity;

import java.math.BigDecimal;

// Generated Feb 3, 2023 5:37:34 PM by Hibernate Tools 5.2.12.Final

import java.util.ArrayList;
import java.util.Calendar;
import java.util.Date;
import java.util.List;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

import org.hibernate.annotations.Formula;
import org.hibernate.annotations.GenericGenerator;

import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;

import entity.frwk.SysUsers;

/**
 * QcChkOutSrc generated by hbm2java
 */
@Entity
@Table(name = "QC_CHK_OUT_SRC")
public class QcChkOutSrc implements java.io.Serializable {

	private static final long serialVersionUID = 1L;

	private String id;
	@JsonIgnoreProperties({ "quotationItemExe","workOrderExes"})
	private WorkOrder workOrder;
	@JsonIgnoreProperties({ "workOrderId"})
	private WorkOrderExe workOrderExe;
	private Long amount;
	private Long totalAmount;
	private Date startTime;
	private Date endTime;
	private Date createDate;
	@JsonIgnoreProperties("lstMail")
	private SysUsers creator;
	@JsonIgnoreProperties("lstMail")
	private SysUsers worker;
	@JsonIgnoreProperties("qcChkOutSrc")
	private List<QcChkOutSrcDetail> qcChkOutSrcDetails = new ArrayList<QcChkOutSrcDetail>();

	public QcChkOutSrc() {
	}

	public QcChkOutSrc(String id) {
		this.id = id;
	}

	public QcChkOutSrc(WorkOrderExe woExe) {
		this.workOrderExe = woExe;
		this.workOrder = woExe.getWorkOrderId();
		this.amount = woExe.getTotalAmount().longValue();
		this.totalAmount = this.amount;
		this.createDate = Calendar.getInstance().getTime();

	}

	@Id
	@Column(name = "ID", unique = true, nullable = false, length = 40)
	@GeneratedValue(generator = "uuid")
	@GenericGenerator(name = "uuid", strategy = "uuid")
	public String getId() {
		return this.id;
	}

	public void setId(String id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "WORK_ORDER_ID")
	@JsonIgnore
	public WorkOrder getWorkOrder() {
		return this.workOrder;
	}

	public void setWorkOrder(WorkOrder workOrder) {
		this.workOrder = workOrder;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "WORK_ORDER_EXE_ID")
	@JsonIgnore
	public WorkOrderExe getWorkOrderExe() {
		return this.workOrderExe;
	}

	public void setWorkOrderExe(WorkOrderExe workOrderExe) {
		this.workOrderExe = workOrderExe;
	}

	@Column(name = "AMOUNT", precision = 15, scale = 0)
	public Long getAmount() {
		return this.amount;
	}

	public void setAmount(Long amount) {
		this.amount = amount;
	}

	@Column(name = "TOTAL_AMOUNT", precision = 15, scale = 0)
	public Long getTotalAmount() {
		return totalAmount;
	}

	public void setTotalAmount(Long totalAmount) {
		this.totalAmount = totalAmount;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "START_TIME", length = 7)
	public Date getStartTime() {
		return this.startTime;
	}

	public void setStartTime(Date startTime) {
		this.startTime = startTime;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "END_TIME", length = 7)
	public Date getEndTime() {
		return this.endTime;
	}

	public void setEndTime(Date endTime) {
		this.endTime = endTime;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "CREATE_DATE", length = 7)
	public Date getCreateDate() {
		return this.createDate;
	}

	public void setCreateDate(Date createDate) {
		this.createDate = createDate;
	}

	@JoinColumn(name = "CREATOR", referencedColumnName = "ID")
	@ManyToOne(fetch = FetchType.LAZY)
	public SysUsers getCreator() {
		return creator;
	}

	public void setCreator(SysUsers creator) {
		this.creator = creator;
	}

	@OneToMany(cascade = CascadeType.ALL, fetch = FetchType.LAZY, mappedBy = "qcChkOutSrc")
	public List<QcChkOutSrcDetail> getQcChkOutSrcDetails() {
		return this.qcChkOutSrcDetails;
	}

	public void setQcChkOutSrcDetails(List<QcChkOutSrcDetail> qcChkOutSrcDetails) {
		this.qcChkOutSrcDetails = qcChkOutSrcDetails;
	}

	@JoinColumn(name = "WORKER", referencedColumnName = "ID")
	@ManyToOne(fetch = FetchType.LAZY)
	public SysUsers getWorker() {
		return worker;
	}

	public void setWorker(SysUsers worker) {
		this.worker = worker;
	}

	private Customer customer;

	@JoinColumn(name = "CUSTOMER_ID")
	@ManyToOne(optional = true, fetch = FetchType.LAZY)
	public Customer getCustomer() {
		return customer;
	}

	public void setCustomer(Customer customer) {
		this.customer = customer;
	}

	/**
	 * so luong da chuyen GCN
	 */
	@Formula("(select nvl(sum(osd.AMOUNT),0) from QC_OS_DETAIL osd where osd.QC_CHK_OUT_SRC_ID = id)")
	public BigDecimal getTotalToOs() {
		return totalToOs;
	}

	private BigDecimal totalToOs;

	public void setTotalToOs(BigDecimal totalToOs) {
		this.totalToOs = totalToOs;
	}
}
