package entity;
// Generated Feb 3, 2023 5:37:34 PM by Hibernate Tools 5.2.12.Final

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;

import org.hibernate.annotations.GenericGenerator;

import com.fasterxml.jackson.annotation.JsonIgnore;

import entity.frwk.SysDictParam;

/**
 * QcChkOutSrcDetail generated by hbm2java
 */
@Entity
@Table(name = "QC_CHK_OUT_SRC_DETAIL")
public class QcChkOutSrcDetail implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;
	
	private String id;
	@JsonIgnore
	private QcChkOutSrc qcChkOutSrc;
	private Long ngAmount;
	private Long brokenAmount;
	private WorkOrder workOrder;

	public QcChkOutSrcDetail() {
	}

	
	@Id
	@Column(name = "ID", unique = true, nullable = false, length = 40)
	@GeneratedValue(generator = "uuid")
	@GenericGenerator(name = "uuid", strategy = "uuid")
	public String getId() {
		return this.id;
	}

	public void setId(String id) {
		this.id = id;
	}

	
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "WORK_ORDER_ID")
	@JsonIgnore
	public WorkOrder getWorkOrder() {
		return this.workOrder;
	}
	
	public void setWorkOrder(WorkOrder workOrder) {
		this.workOrder = workOrder;
	}


	@ManyToOne(optional = false,fetch = FetchType.LAZY)
	@JoinColumn(name = "QC_CHK_OUT_ID", nullable = false)
	public QcChkOutSrc getQcChkOutSrc() {
		return this.qcChkOutSrc;
	}

	public void setQcChkOutSrc(QcChkOutSrc qcChkOutSrc) {
		this.qcChkOutSrc = qcChkOutSrc;
	}

	@Column(name = "NG_AMOUNT", precision = 10, scale = 0)
	public Long getNgAmount() {
		return this.ngAmount;
	}

	public void setNgAmount(Long ngAmount) {
		this.ngAmount = ngAmount;
	}

	@Column(name = "BROKEN_AMOUNT")
	public Long getBrokenAmount() {
		return brokenAmount;
	}

	public void setBrokenAmount(Long brokenAmount) {
		this.brokenAmount = brokenAmount;
	}
	private String ngDescription;

	@Column(name = "NG_DESCRIPTION")
	public String getNgDescription() {
		return ngDescription;
	}

	public void setNgDescription(String ngDescription) {
		this.ngDescription = ngDescription;
	}
	private SysDictParam errorCause;

	@JoinColumn(name = "ERROR_CAUSE_ID", referencedColumnName = "ID")
	@ManyToOne(fetch = FetchType.LAZY)
	public SysDictParam getErrorCause() {
		return errorCause;
	}

	public void setErrorCause(SysDictParam errorCause) {
		this.errorCause = errorCause;
	}
}
