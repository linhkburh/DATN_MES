package entity;
// Generated Feb 24, 2023 8:58:14 AM by Hibernate Tools 5.2.12.Final

import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

import org.hibernate.annotations.GenericGenerator;

import com.fasterxml.jackson.annotation.JsonIgnoreProperties;

import entity.frwk.SysUsers;

/**
 * QcIn generated by hbm2java
 */
@Entity
@Table(name = "QC_IN")
public class QcIn implements java.io.Serializable {

	private String id;
	private Customer customers; 
	@JsonIgnoreProperties({ "department", "company", "technicalId", "planner", "acId", "quotationItemMaterialList",
			"lstProcessExe", "lstQuotationRepaire", "quotationId", "quotationItemAllExeList","quotationItemExeList","quotationItemProList","workOrders"})
	private QuotationItem quotationItem;
	@JsonIgnoreProperties({"quotationItem","workOrders"})
	private QuotationItemExe quotationItemExe;
	@JsonIgnoreProperties({ "quotationItemExe","workOrderExes"})
	private WorkOrder workOrder;
	@JsonIgnoreProperties({"lstMail"})
	private SysUsers sysUsers;
	private long amount;
	private Date createDate;
	private long totalAmount;
	private long ngAmount;
	private long brokenAmount;
	private Date receiptDate;
	private Date receiptDateTo;
	@JsonIgnoreProperties({"qcIn"})
	private List<QcInDetail> qcInDetails = new ArrayList<QcInDetail>();
	@JsonIgnoreProperties({"quotationItemExe","quotationItem","workOrder","qcOsDetails","qi","sysUsers"})
	private QcOs qcOs;

	public QcIn() {
	}

	public QcIn(String id, QuotationItem quotationItem, SysUsers sysUsers, long amount, Date createDate) {
		this.id = id;
		this.quotationItem = quotationItem;
		this.sysUsers = sysUsers;
		this.amount = amount;
		this.createDate = createDate;
	}

	public QcIn(String id, Customer customers, QuotationItem quotationItem, QuotationItemExe quotationItemExe,
			SysUsers sysUsers, long amount, Date createDate, BigDecimal totalAmount, BigDecimal ngAmount,
			BigDecimal brokenAmount, Date receiptDate) {
		this.id = id;
		this.customers = customers;
		this.quotationItem = quotationItem;
		this.quotationItemExe = quotationItemExe;
		this.sysUsers = sysUsers;
		this.amount = amount;
		this.createDate = createDate;
		this.receiptDate = receiptDate;
	}

	@Id
	@Column(name = "ID", unique = true, nullable = false, length = 40)
	@GeneratedValue(generator = "uuid")
	@GenericGenerator(name = "uuid", strategy = "uuid")
	public String getId() {
		return this.id;
	}

	public void setId(String id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "PARTNER_ID")
	public Customer getCustomers() {
		return this.customers;
	}

	public void setCustomers(Customer customers) {
		this.customers = customers;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "QUOTATION_ITEM_ID")
	public QuotationItem getQuotationItem() {
		return this.quotationItem;
	}

	public void setQuotationItem(QuotationItem quotationItem) {
		this.quotationItem = quotationItem;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "QUOTATION_ITEM_EXE_ID")
	public QuotationItemExe getQuotationItemExe() {
		return this.quotationItemExe;
	}

	public void setQuotationItemExe(QuotationItemExe quotationItemExe) {
		this.quotationItemExe = quotationItemExe;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "CREATOR", nullable = false)
	public SysUsers getSysUsers() {
		return this.sysUsers;
	}

	public void setSysUsers(SysUsers sysUsers) {
		this.sysUsers = sysUsers;
	}

	@Column(name = "AMOUNT", nullable = false, precision = 20, scale = 0)
	public long getAmount() {
		return this.amount;
	}

	public void setAmount(long amount) {
		this.amount = amount;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "CREATE_DATE", nullable = false, length = 7)
	public Date getCreateDate() {
		return this.createDate;
	}

	public void setCreateDate(Date createDate) {
		this.createDate = createDate;
	}

	@Column(name = "TOTAL_AMOUNT", precision = 20, scale = 0)
	public long getTotalAmount() {
		return this.totalAmount;
	}

	public void setTotalAmount(long totalAmount) {
		this.totalAmount = totalAmount;
	}

	@Column(name = "NG_AMOUNT", precision = 20, scale = 0)
	public long getNgAmount() {
		return this.ngAmount;
	}

	public void setNgAmount(long ngAmount) {
		this.ngAmount = ngAmount;
	}

	@Column(name = "BROKEN_AMOUNT", precision = 20, scale = 0)
	public long getBrokenAmount() {
		return this.brokenAmount;
	}

	public void setBrokenAmount(long brokenAmount) {
		this.brokenAmount = brokenAmount;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "RECEIPT_DATE", length = 7)
	public Date getReceiptDate() {
		return this.receiptDate;
	}
	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "RECEIPT_DATE_TO", length = 7)
	public Date getReceiptDateTo() {
		return this.receiptDateTo;
	}
	
	

	public void setReceiptDateTo(Date receiptDateTo) {
		this.receiptDateTo = receiptDateTo;
	}

	public void setReceiptDate(Date receiptDate) {
		this.receiptDate = receiptDate;
	}
	@JoinColumn(name = "WORK_ORDER_ID")
	@ManyToOne(fetch = FetchType.LAZY)
	public WorkOrder getWorkOrder() {
		return this.workOrder;
	}

	public void setWorkOrder(WorkOrder workOrder) {
		this.workOrder = workOrder;
	} 
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "QC_OS_ID", nullable = false)
	public QcOs getQcOs() {
		return this.qcOs;
	}

	public void setQcOs(QcOs qcOs) {
		this.qcOs = qcOs;
	}
	@OneToMany(cascade = CascadeType.ALL, fetch = FetchType.LAZY, mappedBy = "qcIn")
	public List<QcInDetail> getQcInDetails() {
		return qcInDetails;
	}

	public void setQcInDetails(List<QcInDetail> qcInDetails) {
		this.qcInDetails = qcInDetails;
	}
	
	
	
	
}
