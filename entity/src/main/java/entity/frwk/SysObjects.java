package entity.frwk;

import java.util.ArrayList;

// Generated Nov 13, 2019 6:00:05 PM by Hibernate Tools 3.4.0.CR1

import java.util.Date;
import java.util.HashSet;
import java.util.List;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlTransient;

import org.hibernate.annotations.GenericGenerator;

import com.fasterxml.jackson.annotation.JsonIgnore;

/**
 * SysObjects generated by hbm2java
 */
@Entity
@Table(name = "SYS_OBJECTS")
@XmlAccessorType(XmlAccessType.FIELD)
public class SysObjects implements java.io.Serializable, Cloneable {

	private String id;
	@XmlTransient
	private SysObjects sysObjects;
	private String name;
	private String action;
	private String objectId;
	private Short orderColumn;
	private Date modifyTime;
	private Boolean isAudit;
	private String nameEn;
	private Boolean active;
	private Boolean usedbypartner;

	@JsonIgnore
	private Set<SysObjects> sysObjectses = new HashSet(0);

	@JsonIgnore
	private List<SysRights> sysRightses = new ArrayList<SysRights>();

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "sysRoles")
	public List<SysRights> getSysRightses() {
		return this.sysRightses;
	}

	public void setSysRightses(List<SysRights> sysRightses) {
		this.sysRightses = sysRightses;
	}

	public SysObjects() {
	}

	public SysObjects(String id, String name) {
		this.id = id;
		this.name = name;
	}

//	@Override
//	public SysObjects clone() {
//		SysObjects clone = this.clone();
//		clone.setId(null);
//		return clone;
//	}
//	public SysObjects copy() {
//		SysObjects clone = new SysObjects();
//		List<String> ignore = new ArrayList<String>();
//		ignore.add("sysObjects");
//		ignore.add("sysObjectses");
//		
//		Utils.copyObj(this, clone, ignore);
//		return clone;
//	}
	public SysObjects copy() {
		SysObjects clone = new SysObjects();
		clone.action = this.action;
		clone.active = this.active;
		clone.name = this.name;
		clone.nameEn = this.nameEn;
		clone.sysObjects = this.sysObjects;
		clone.id = null;
		clone.objectId = "COPY:" + this.objectId;
		clone.action = "COPY:" + this.action;
		return clone;
	}

	public SysObjects(String id, SysObjects sysObjects, String name, String action, String objectId, Short orderColumn,
			Date modifyTime, Boolean isAudit, String nameEn, Boolean active, Boolean usedbypartner, Set sysObjectses,
			List<SysRights> sysRightses) {
		this.id = id;
		this.sysObjects = sysObjects;
		this.name = name;
		this.action = action;
		this.objectId = objectId;
		this.orderColumn = orderColumn;
		this.modifyTime = modifyTime;
		this.isAudit = isAudit;
		this.nameEn = nameEn;
		this.active = active;
		this.usedbypartner = usedbypartner;
		this.sysObjectses = sysObjectses;
		this.sysRightses = sysRightses;
	}

	@Id
	@Column(name = "ID", unique = true, nullable = false, length = 40)
	@GeneratedValue(generator = "uuid")
	@GenericGenerator(name = "uuid", strategy = "uuid")
	public String getId() {
		return this.id;
	}

	public void setId(String id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "PARENT_ID")
	public SysObjects getSysObjects() {
		return this.sysObjects;
	}

	public void setSysObjects(SysObjects sysObjects) {
		this.sysObjects = sysObjects;
	}

	@Column(name = "NAME", nullable = false, length = 3000)
	public String getName() {
		return this.name;
	}

	public void setName(String name) {
		this.name = name;
	}

	@Column(name = "ACTION", length = 3000)
	public String getAction() {
		return this.action;
	}

	public void setAction(String action) {
		this.action = action;
	}

	@Column(name = "OBJECT_ID", length = 40)
	public String getObjectId() {
		return this.objectId;
	}

	public void setObjectId(String objectId) {
		this.objectId = objectId;
	}

	@Column(name = "ORDER_COLUMN", precision = 3, scale = 0)
	public Short getOrderColumn() {
		return this.orderColumn;
	}

	public void setOrderColumn(Short orderColumn) {
		this.orderColumn = orderColumn;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "MODIFY_TIME", length = 7)
	public Date getModifyTime() {
		return this.modifyTime;
	}

	public void setModifyTime(Date modifyTime) {
		this.modifyTime = modifyTime;
	}

	@Column(name = "IS_AUDIT", precision = 1, scale = 0)
	public Boolean getIsAudit() {
		return this.isAudit;
	}

	public void setIsAudit(Boolean isAudit) {
		this.isAudit = isAudit;
	}

	@Column(name = "NAME_EN", length = 3000)
	public String getNameEn() {
		return this.nameEn;
	}

	public void setNameEn(String nameEn) {
		this.nameEn = nameEn;
	}

	@Column(name = "ACTIVE", precision = 1, scale = 0)
	public Boolean getActive() {
		return this.active;
	}

	public void setActive(Boolean active) {
		this.active = active;
	}

	@Column(name = "USEDBYPARTNER", precision = 1, scale = 0)
	public Boolean getUsedbypartner() {
		return this.usedbypartner;
	}

	public void setUsedbypartner(Boolean usedbypartner) {
		this.usedbypartner = usedbypartner;
	}

	@JsonIgnore
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "sysObjects")
	public Set<SysObjects> getSysObjectses() {
		return this.sysObjectses;
	}

	public void setSysObjectses(Set<SysObjects> sysObjectses) {
		this.sysObjectses = sysObjectses;
	}

	public Boolean isOffSpring(SysObjects so) {
		if (this.getId().equals(so.getId()))
			return Boolean.TRUE;
		for (SysObjects child : so.getSysObjectses()) {
			if (isOffSpring(child))
				return true;
		}
		return Boolean.FALSE;
	}

}
