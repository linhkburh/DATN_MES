package entity.frwk;
//Generated Aug 15, 2022 9:26:58 AM by Hibernate Tools 3.6.0.Final

import java.util.ArrayList;
import java.util.List;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Transient;

import com.fasterxml.jackson.annotation.JsonIgnore;

import common.util.Formater;

/**
 * SysMenu generated by hbm2java
 */
@Entity
@Table(name = "SYS_MENU")
public class SysMenu implements java.io.Serializable {

	private String id;
	private SysMenu parent;
	private String code;
	private String name;
	private String nameEn;
	private String action;
	private Short disOrder;
	private Boolean deActive;
	private List<SysMenu> children;

	public SysMenu() {
	}

	public SysMenu(String id, String code, String name) {
		this.id = id;
		this.code = code;
		this.name = name;
	}

	public SysMenu(String id, SysMenu parent, String code, String name, String action, Short disOrder,
			List<SysMenu> children) {
		this.id = id;
		this.parent = parent;
		this.code = code;
		this.name = name;
		this.action = action;
		this.disOrder = disOrder;
		this.children = children;
	}

	@Id
	@Column(name = "ID", unique = true, nullable = false, length = 40)
	public String getId() {
		return this.id;
	}

	public void setId(String id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "PARENT")
	@JsonIgnore
	public SysMenu getParent() {
		return parent;
	}

	public void setParent(SysMenu parent) {
		this.parent = parent;
	}

	@Column(name = "CODE", nullable = false, length = 40)
	public String getCode() {
		return this.code;
	}

	public void setCode(String code) {
		this.code = code;
	}

	@Column(name = "NAME", nullable = false, length = 600)
	public String getName() {
		return this.name;
	}

	public void setName(String name) {
		this.name = name;
	}

	@Column(name = "ACTION", length = 300)
	public String getAction() {
		return this.action;
	}

	public void setAction(String action) {
		this.action = action;
	}

	@Column(name = "NAME_EN", nullable = false, length = 300)
	public String getNameEn() {
		return nameEn;
	}

	public void setNameEn(String nameEn) {
		this.nameEn = nameEn;
	}

	@Column(name = "DIS_ORDER", precision = 3, scale = 0)
	public Short getDisOrder() {
		return this.disOrder;
	}

	public void setDisOrder(Short disOrder) {
		this.disOrder = disOrder;
	}
	@Column(name = "DE_ACTIVE")
	public Boolean getDeActive() {
		return deActive;
	}

	public void setDeActive(Boolean deActive) {
		this.deActive = deActive;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "parent")
	public List<SysMenu> getChildren() {
		return children;
	}

	public void setChildren(List<SysMenu> children) {
		this.children = children;
	}

	private List<SysMenu> tree = null;

	@Transient
	@JsonIgnore
	public List<SysMenu> getTree() {
		if (tree != null)
			return tree;
		if (this.getParent() == null)
			return null;
		else {
			tree = new ArrayList<SysMenu>();
			List<SysMenu> parentTree = this.getParent().getTree();
			if (parentTree != null)
				tree.addAll(parentTree);
			tree.add(parent);
			return tree;
		}
	}

	@JsonIgnore
	@Transient
	public SysMenu getRoot() {
		return Formater.isNull(tree) ? this : tree.get(0);
	}

	/**
	 * Add menu item vao menu tree (this-root of tree) <br>
	 * Add ancestor menu vao root, neu ancestor chua ton tai trong tree
	 * 
	 * @param leafMenu leaf menu
	 */
	public void add(SysMenu leafMenu) {
		// Xac dinh addToItem menu
		SysMenu addToItem = this;
		if (!Formater.isNull(leafMenu.getTree())) {
			int treeIdx = 0;
			while (true) {
				SysMenu ancestorMenu = leafMenu.getTree().get(treeIdx);
				Boolean existAncestorMenu = Boolean.FALSE;
				if (!Formater.isNull(addToItem.children)) {
					for (SysMenu c : addToItem.children) {
						if (c.getId().equals(ancestorMenu.getId())) {
							addToItem = c;
							existAncestorMenu = Boolean.TRUE;
							break;
						}
					}
				}
				if (!existAncestorMenu)
					addToItem = addToItem.addItem(ancestorMenu);
				treeIdx++;
				if (treeIdx == leafMenu.getTree().size())
					break;
			}
		}
		// Add menu vao dung vi tri
		addToItem.addItem(leafMenu);
	}

	private SysMenu addItem(SysMenu menu) {
		if (this.children == null)
			this.children = new ArrayList<SysMenu>();
		SysMenu nonProxy = nonProxy(menu);
		this.children.add(nonProxy);
		nonProxy.setParent(this);
		return nonProxy;
	}

	private SysMenu nonProxy(SysMenu menu) {
		SysMenu clone = new SysMenu();
		clone.setId(menu.getId());
		clone.setAction(menu.getAction());
		clone.setCode(menu.getCode());
		clone.setName(menu.getName());
		clone.setDisOrder(menu.getDisOrder());
		clone.setNameEn(menu.getNameEn());
		return clone;
	}

}