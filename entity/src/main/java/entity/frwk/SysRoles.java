package entity.frwk;

import java.util.ArrayList;

// Generated Nov 13, 2019 6:00:05 PM by Hibernate Tools 3.4.0.CR1

import java.util.Date;
import java.util.List;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.Transient;
import javax.persistence.UniqueConstraint;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlTransient;

import org.hibernate.annotations.GenericGenerator;

import com.fasterxml.jackson.annotation.JsonIgnore;

import common.util.Formater;

/**
 * SysRoles generated by hbm2java
 */
@Entity
@Table(name = "SYS_ROLES", uniqueConstraints = @UniqueConstraint(columnNames = "CODE"))
@XmlAccessorType(XmlAccessType.FIELD)
public class SysRoles implements java.io.Serializable {

	private String id;
	@XmlTransient
	private SysRoles sysRoles;
	private String code;
	private String descriptionVi;
	private String descriptionEn;
	private Date modifyTime;
	private String pathCreate;
	private String pathOwner;
	private Boolean usedbypartner;
	private String defaultPage;
	private Byte defaultPagePriority;
	@JsonIgnore
	private List<SysRoles> sysRoleses = new ArrayList<SysRoles>();
	@JsonIgnore
	private List<SysRolesUsers> sysRolesUserses = new ArrayList<SysRolesUsers>();
	@JsonIgnore
	private List<SysRights> sysRightses = new ArrayList<SysRights>();
	@Transient
	private String rights;
	private String parentId;

	public SysRoles(String id) {
		this.id = id;
	}

	public void setParentId(String parentId) {
		this.parentId = parentId;
	}

	@Transient
	public String getParentId() {
		if (sysRoles != null)
			return sysRoles.getId();
		return parentId;
	}

	@Transient
	public String getRights() {
		return rights;
	}

	public void setRights(String rights) {
		this.rights = rights;
	}

	private SysUsers creator, modifier;

	public SysUsers getCreator() {
		return creator;
	}

	public void setCreator(SysUsers creator) {
		this.creator = creator;
	}

	@Transient
	public SysUsers getModifier() {
		return modifier;
	}

	public void setModifier(SysUsers modifier) {
		this.modifier = modifier;
	}

	public SysRoles() {
	}

	public SysRoles(String id, String code) {
		this.id = id;
		this.code = code;
	}

	public SysRoles(String id, SysRoles sysRoles, String code, String descriptionVi, String descriptionEn,
			Date modifyTime, String pathCreate, String pathOwner, Boolean usedbypartner, String defaultPage,
			Byte defaultPagePriority, Boolean notPublic, List<SysRoles> sysRoleses, List<SysRights> sysRightses,
			List<SysRolesUsers> sysRolesUserses) {
		this.id = id;
		this.sysRoles = sysRoles;
		this.code = code;
		this.descriptionVi = descriptionVi;
		this.descriptionEn = descriptionEn;
		this.modifyTime = modifyTime;
		this.pathCreate = pathCreate;
		this.pathOwner = pathOwner;
		this.usedbypartner = usedbypartner;
		this.defaultPage = defaultPage;
		this.defaultPagePriority = defaultPagePriority;
		this.sysRoleses = sysRoleses;
		this.sysRightses = sysRightses;
		this.sysRolesUserses = sysRolesUserses;
	}

	@Id
	@Column(name = "ID", unique = true, nullable = false, length = 40)
	@GeneratedValue(generator = "uuid")
	@GenericGenerator(name = "uuid", strategy = "uuid")
	public String getId() {
		return this.id;
	}

	public void setId(String id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "PARENT")
	public SysRoles getSysRoles() {
		return this.sysRoles;
	}

	public void setSysRoles(SysRoles sysRoles) {
		this.sysRoles = sysRoles;
	}

	@Column(name = "CODE", unique = true, nullable = false, length = 300)
	public String getCode() {
		return this.code;
	}

	public void setCode(String code) {
		this.code = code;
	}

	@Column(name = "DESCRIPTION_VI", length = 3000)
	public String getDescriptionVi() {
		return this.descriptionVi;
	}

	public void setDescriptionVi(String descriptionVi) {
		this.descriptionVi = descriptionVi;
	}

	@Column(name = "DESCRIPTION_EN", length = 3000)
	public String getDescriptionEn() {
		return this.descriptionEn;
	}

	public void setDescriptionEn(String descriptionEn) {
		this.descriptionEn = descriptionEn;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "MODIFY_TIME", length = 7)
	public Date getModifyTime() {
		return this.modifyTime;
	}

	public void setModifyTime(Date modifyTime) {
		this.modifyTime = modifyTime;
	}

	@Column(name = "PATH_CREATE", length = 400)
	public String getPathCreate() {
		return this.pathCreate;
	}

	public void setPathCreate(String pathCreate) {
		this.pathCreate = pathCreate;
	}

	@Column(name = "PATH_OWNER", length = 400)
	public String getPathOwner() {
		return this.pathOwner;
	}

	public void setPathOwner(String pathOwner) {
		this.pathOwner = pathOwner;
	}

	@Column(name = "USEDBYPARTNER", precision = 1, scale = 0)
	public Boolean getUsedbypartner() {
		return this.usedbypartner;
	}

	public void setUsedbypartner(Boolean usedbypartner) {
		this.usedbypartner = usedbypartner;
	}

	@Column(name = "DEFAULT_PAGE", length = 400)
	public String getDefaultPage() {
		return this.defaultPage;
	}

	public void setDefaultPage(String defaultPage) {
		this.defaultPage = defaultPage;
	}

	@Column(name = "DEFAULT_PAGE_PRIORITY", precision = 2, scale = 0)
	public Byte getDefaultPagePriority() {
		return this.defaultPagePriority;
	}

	public void setDefaultPagePriority(Byte defaultPagePriority) {
		this.defaultPagePriority = defaultPagePriority;
	}

	@JsonIgnore
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "sysRoles")
	public List<SysRoles> getSysRoleses() {
		return this.sysRoleses;
	}

	public void setSysRoleses(List<SysRoles> sysRoleses) {
		this.sysRoleses = sysRoleses;
	}

	@JsonIgnore
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "sysRoles")
	public List<SysRights> getSysRightses() {
		return this.sysRightses;
	}

	public void setSysRightses(List<SysRights> sysRightses) {
		this.sysRightses = sysRightses;
	}

	@JsonIgnore
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "sysRoles")
	public List<SysRolesUsers> getSysRolesUserses() {
		return this.sysRolesUserses;
	}

	public void setSysRolesUserses(List<SysRolesUsers> sysRolesUserses) {
		this.sysRolesUserses = sysRolesUserses;
	}

	public List<SysRoles> getSysRoleses(boolean bNotPublicRole) {
		return sysRoleses;
	}

	@JsonIgnore
	@Transient
	private String path;

	@Transient
	public String getPath() {
		if (!Formater.isNull(path))
			return path;
		path = id;
		if (sysRoles != null)
			path = sysRoles.getPath() + "_" + path;
		return path;
	}

	private int iLevel;

	public void setILevel(int iLevel) {
		this.iLevel = iLevel;
	}
	public int getILevel() {
		return iLevel;
	}
}
