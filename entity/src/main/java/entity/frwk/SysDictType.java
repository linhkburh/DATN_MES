package entity.frwk;

import java.util.ArrayList;

// Generated Nov 13, 2019 6:00:05 PM by Hibernate Tools 3.4.0.CR1

import java.util.HashSet;
import java.util.List;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.NamedQuery;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlTransient;

import org.hibernate.annotations.GenericGenerator;

import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;

/**
 * SysDictType generated by hbm2java
 */
@Entity
@Table(name = "SYS_DICT_TYPE")
@NamedQuery(name = "SysDictType.findAll", query = "SELECT r FROM SysDictType r")
@XmlAccessorType(XmlAccessType.FIELD)
public class SysDictType implements java.io.Serializable {

	private static final long serialVersionUID = 1L;

	private String id;
	private String name;
	private String code;

	private String description;
	@JsonIgnoreProperties("sysDictType")
	@XmlTransient
	private List<SysDictParam> sysDictParams = new ArrayList<SysDictParam>(0);

	public SysDictType() {
	}

	public SysDictType(String id) {
		this.id = id;
	}

	public SysDictType(String id, String name) {
		this.id = id;
		this.name = name;
	}

	@Id
	@Column(name = "ID")
	@GeneratedValue(generator = "uuid")
	@GenericGenerator(name = "uuid", strategy = "uuid")
	public String getId() {
		return this.id;
	}

	public void setId(String id) {
		this.id = id;
	}

	@Column(name = "CODE", nullable = false, length = 300)
	public String getCode() {
		return code;
	}

	public void setCode(String code) {
		this.code = code;
	}

	@Column(name = "NAME", nullable = false, length = 300)
	public String getName() {
		return this.name;
	}

	public void setName(String name) {
		this.name = name;
	}

	@Column(name = "DESCRIPTION", length = 300)
	public String getDescription() {
		return this.description;
	}

	public void setDescription(String description) {
		this.description = description;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "sysDictType")
	public List<SysDictParam> getSysDictParams() {
		return this.sysDictParams;
	}

	public void setSysDictParams(List<SysDictParam> sysDictParams) {
		this.sysDictParams = sysDictParams;
	}

}
